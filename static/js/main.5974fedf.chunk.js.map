{"version":3,"sources":["components/pages/tests/updatesStore/updatesStore.module.css","components/pages/tests/parseUrl/parseUrl.module.css","components/pages/tests/tests.module.css","doc.svg","components/pages/help/help.module.css","index.svg","components/blocks/nav/navtop.module.css","components/pages/documentation/Documentation.jsx","components/blocks/nav/NavTopHook.jsx","components/pages/help/Help.jsx","components/pages/index/Index.jsx","connectApi/api.js","redux/testsReducerHook.js","components/pages/tests/updatesStore/UpdatesStore.jsx","components/pages/tests/updatesStore/MyHooksUpdatesStoreContainer.jsx","components/pages/tests/parseUrl/ParseUrl.jsx","components/pages/tests/parseUrl/MyHooksParseUrlContainer.jsx","components/pages/tests/Tests.jsx","Error.jsx","route/AllRoute.jsx","redux/reduxStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Documentation","src","doc","NavTopHook","wrappRef","useRef","navButtonRef","className","navtop","all","wrappSpan","ref","onClick","current","click_1","click_2","openMenu","closedMenu","to","Help","helpCss","wrapper","Index","index","instance","axios","baseURL","newsArticlesAPI","get","then","response","data","inicialState","newPostTexts","articles","id","text","date","addNewsActionCreator","type","newText","addNewsArticlesActionCreator","newId","newArticles","newDate","testsReducerHook","state","action","h1","author","UpdatesStore","props","endElem","storeArticles","length","kopyNum","map","k","updatesStoreCss","spanMod","eTerminal","a","key","bag","MyHooksUpdatesStoreContainer","useSelector","myIdArticles","formatDate","Date","dd","getDate","mm","getMonth","yy","getFullYear","hours","getHours","min","getMinutes","dispatch","useDispatch","onAddNews","onAddNewsThunckArticles","rand","items","name","getArticlesThunkCreator","newPostElement","rows","value","onChange","placeholder","UpdatesStoreCss","textDiv","onAddNewsArticles","Math","random","String","Number","randomNum","ParseUrl","ParseUrlCss","boxTrue","parametersTrue","href","title","boxFalse","parametersFalse","MyHooksParseUrlContainer","trueUrl","falseUrl","useState","stateTrueUrl","setStateTrueUrl","stateFalseUrl","setStateFalseUrl","slice","str","sort","join","falseUrlGenerate","Tests","testsCss","box","Error","location","pathname","AllRoute","history","useHistory","useLocation","parsed","queryString","parse","search","paramTests","Object","keys","isNaN","push","exact","path","component","render","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","AppContainer","app","App","Boolean","window","hostname","match","ReactDOM","hydrate","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5974fedf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"eTerminal\":\"updatesStore_eTerminal__23fBZ\",\"spanMod\":\"updatesStore_spanMod__1c9sE\",\"bag\":\"updatesStore_bag__1Z-bn\",\"textDiv\":\"updatesStore_textDiv__3RIi8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"parseUrl_wrapper__1K5Sl\",\"boxTrue\":\"parseUrl_boxTrue__14E6s\",\"boxFalse\":\"parseUrl_boxFalse__3gDlx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"tests_wrapper__1SRDh\",\"box\":\"tests_box__2-SVc\"};","module.exports = __webpack_public_path__ + \"static/media/doc.b14b7128.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"help_wrapper__2S6Ga\"};","module.exports = __webpack_public_path__ + \"static/media/index.98aafac3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"navtop_all__9ZmG_\",\"wrappSpan\":\"navtop_wrappSpan__e58FQ\",\"click_1\":\"navtop_click_1__1quUl\",\"click_2\":\"navtop_click_2__J74G8\",\"openMenu\":\"navtop_openMenu__TgnpW\",\"closedMenu\":\"navtop_closedMenu__1u69I\"};","import React from 'react';\r\nimport doc from '../../../doc.svg';\r\n\r\n\r\nconst Documentation = () => {\r\n    return (\r\n        <div>\r\n            <h1>Documentation page</h1>\r\n            <img src={doc} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Documentation;","import { NavLink } from 'react-router-dom';\r\nimport navtop from './navtop.module.css';\r\nimport React, { useRef } from 'react';\r\n\r\nconst NavTopHook = () => {\r\n    const wrappRef = useRef();\r\n    const navButtonRef = useRef();\r\n\r\n    const onNavClick = () => {\r\n        navButtonRef.current.className = navButtonRef.current.className !== navtop.click_1 ? navtop.click_1 : navtop.click_2;\r\n        wrappRef.current.className = wrappRef.current.className !== navtop.openMenu ? navtop.openMenu : navtop.closedMenu;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={navtop.all}>\r\n            <div className={navtop.wrappSpan}>\r\n                <span ref={navButtonRef} onClick={() => onNavClick()} className={navtop.click_1}></span>\r\n            </div>\r\n            <div ref={wrappRef} className={navtop.closedMenu} >\r\n                <NavLink to=\"/\">  home </NavLink>\r\n                <NavLink to=\"/documentation\"> documentation </NavLink>\r\n                <NavLink to=\"/help\"> help </NavLink>\r\n                <NavLink to=\"/tests\"> tests </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavTopHook;","import React from 'react';\r\nimport helpCss from './help.module.css';\r\n\r\nconst Help = () => {\r\n    return (\r\n        <div className={helpCss.wrapper}>\r\n            <h1>Help page</h1>\r\n            <p>\r\n                Я попытался выразить логику своего мышления ,отобразив изменения ,происходящие в программе ,на экран.\r\n                Показать с чего я начинаю проект. Как планирую настоящие и будущие изменения. Обработку изменения состояния,\r\n                обработку нескольких изменений состояния, добавление в Store, отрисовку DOM и поиск/обработку\r\n                ошибок ( нажмите много раз |dispatch store thunk| ).\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Help;","import React from 'react';\r\nimport index from '../../../index.svg';\r\n \r\nconst Index = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home page</h1>\r\n            <img src={index} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index;","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: 'https://linessy.com/api'\r\n    }\r\n);\r\n\r\nexport const newsArticlesAPI = {\r\n    getNewsArticles() {\r\n        return instance.get(`https://linessy.com/api`).then(response => { return response.data});\r\n        }\r\n};","import { newsArticlesAPI } from '../connectApi/api';\r\n\r\nconst NEWS_POSTS = 'NEWS_POSTS';\r\nconst NEWS_ARTICLESS = 'NEWS_ARTICLESS';\r\nconst NEWS_THUNCK_ARTICLESS = 'NEWS_THUNCK_ARTICLESS';\r\n\r\n\r\nlet inicialState = {\r\n\r\n  newPostTexts: '',\r\n  articles: [\r\n    { id: null, text: '', date: null }\r\n  ]\r\n}\r\n\r\nconst testsReducerHook = (state = inicialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case NEWS_POSTS:\r\n      {\r\n        return {\r\n          ...state,\r\n          newPostTexts: action.newText\r\n        };\r\n      }\r\n\r\n    case NEWS_ARTICLESS:\r\n      {\r\n        let newArticles = { id: action.newId, text: action.newArticles, date: action.newDate }\r\n        return {\r\n          ...state,\r\n          articles: [...state.articles, newArticles]\r\n        };\r\n      }\r\n\r\n    case NEWS_THUNCK_ARTICLESS:\r\n      {\r\n        let newArticles = { h1: null, text: action.newArticles, author: null }\r\n        return {\r\n          ...state,\r\n          articles: [...state.articles, newArticles]\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport const addNewsActionCreator = (text) => {\r\n  return { type: NEWS_POSTS, newText: text }\r\n}\r\n\r\nexport const addNewsArticlesActionCreator = (id, articles, date) => {\r\n  return { type: NEWS_ARTICLESS, newId: id, newArticles: articles, newDate: date }\r\n}\r\n\r\nexport const getArticlesThunkCreator = (rand, date) => {\r\n  return (dispatch) => {\r\n    newsArticlesAPI.getNewsArticles().then(data => {\r\n      dispatch(addNewsArticlesActionCreator(data.items[rand].id, data.items[rand].name, date));\r\n      dispatch(addNewsActionCreator(data.items[rand].name));\r\n    });\r\n  }\r\n}\r\n\r\nexport default testsReducerHook;","import React from 'react';\r\nimport updatesStoreCss from './updatesStore.module.css';\r\n\r\nconst UpdatesStore = (props) => {\r\n\r\n\r\n    let endElem = props.storeArticles.length - 1;\r\n    let kopyNum = 0;\r\n    props.storeArticles.map(k => {\r\n        kopyNum = props.storeArticles[endElem].id === k.id  ? kopyNum + 1 : kopyNum;\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Redux store<span className={updatesStoreCss.spanMod}>_</span></h2>\r\n            <div className={updatesStoreCss.eTerminal} >\r\n                {\r\n                    props.storeArticles.map(a =>\r\n                        \r\n                        <div key={a.id}>\r\n                            <div>{`>>`}</div>\r\n                            {\r\n                                props.storeArticles[endElem].id === a.id && kopyNum > 1\r\n                                    ? <div className={updatesStoreCss.bag}>{`Warning: Encountered ${kopyNum} children with the same key, ${a.id}!`} <br /> {` My id: ${a.id} `} <br /> {`   My text: ${a.text} `} <br /> {`   My current time: ${a.date} `}</div>\r\n                                    : <div >{` My id: ${a.id} `} <br /> {`   My text: ${a.text} `} <br /> {`   My current time: ${a.date} `}</div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UpdatesStore;","import React, { useRef } from 'react';\r\nimport { addNewsActionCreator, addNewsArticlesActionCreator, getArticlesThunkCreator } from '../../../../redux/testsReducerHook';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport UpdatesStoreCss from './updatesStore.module.css'\r\nimport UpdatesStore from './UpdatesStore';\r\n\r\n\r\nconst MyHooksUpdatesStoreContainer = () => {\r\n\r\n  const newPostTexts = useSelector(state => state.testsReducerHook.newPostTexts);\r\n  const newArticles = useSelector(state => state.testsReducerHook.articles);\r\n\r\n  const randomNum = () => {\r\n    let rand = Math.random();\r\n    rand = String(rand);\r\n    rand = Number(rand[2]);\r\n    return rand;\r\n  }\r\n  /**\r\n   * instead of a server\r\n   */\r\n  const myIdArticles = useSelector(state => state.testsReducerHook.articles[state.testsReducerHook.articles.length - 1].id);\r\n  const formatDate = (date = new Date()) => {\r\n    let dd = date.getDate();\r\n    let mm = date.getMonth() + 1;\r\n    let yy = date.getFullYear();\r\n    let hours = date.getHours();\r\n    let min = date.getMinutes();\r\n\r\n    dd = dd < 10 ? dd = `0${dd}` : dd;\r\n    mm = mm < 10 ? mm = `0${mm}` : mm;\r\n\r\n    return `${dd}.${mm}.${yy} ${hours}:${min}`;\r\n  }\r\n  /**\r\n * end instead of a server\r\n */\r\n\r\n  const dispatch = useDispatch();\r\n  const onAddNews = (text) => { dispatch(addNewsActionCreator(text)) };\r\n  const onAddNewsArticles = (id, articles, date) => { dispatch(addNewsArticlesActionCreator(id, articles, date)) }\r\n  const onAddNewsThunckArticles = (rand, date) => { dispatch(getArticlesThunkCreator(rand, date)) }\r\n\r\n  let newPostElement = useRef();\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    onAddNews(text);\r\n  }\r\n\r\n  let onAddNewsPost = () => {\r\n    let articles = newPostTexts;\r\n    let id = myIdArticles + 1;\r\n    let date = formatDate();\r\n    onAddNewsArticles(id, articles, date);\r\n    onAddNews('');\r\n  }\r\n\r\n\r\n  let onAddNewsThunk = () => {\r\n    let rand = randomNum();\r\n    let date = formatDate();\r\n    onAddNewsThunckArticles(rand, date);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>Input text</h2>\r\n        <textarea rows=\"10\" value={newPostTexts} ref={newPostElement} onChange={onPostChange} placeholder=\"Input text...\" />\r\n        <div className={UpdatesStoreCss.textDiv}><b>States:</b> {newPostTexts}</div>\r\n        <div>\r\n          <button onClick={onAddNewsPost}>dispatch store</button>\r\n          <button onClick={onAddNewsThunk}>dispatch store thunk</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <UpdatesStore storeArticles={newArticles} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default MyHooksUpdatesStoreContainer;","import React from 'react';\r\nimport ParseUrlCss from './parseUrl.module.css';\r\n\r\nconst ParseUrl = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={ParseUrlCss.boxTrue}>\r\n                <h3>True Query String Parameters</h3>\r\n                {props.parametersTrue === null ? <a href=\"#/tests\" title=\"true\">.../tests</a> : <a href={'#/tests', props.parametersTrue} title=\"true\">.../tests{props.parametersTrue}</a>}\r\n            </div>\r\n            <div className={ParseUrlCss.boxFalse}>\r\n                <h3>False Query String Parameters</h3>\r\n                {props.parametersFalse === null ? <a href=\"#/tests\" title=\"true\">.../tests</a> : <a href={'#/tests', props.parametersFalse} title=\"false\">.../tests{props.parametersFalse}</a>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ParseUrl;","import React, { useState } from 'react';\r\nimport ParseUrl from './ParseUrl';\r\nimport ParseUrlCss from './parseUrl.module.css';\r\n\r\nconst MyHooksParseUrlContainer = () => {\r\n\r\n    let trueUrl = null;\r\n    let falseUrl = null;\r\n    const [stateTrueUrl, setStateTrueUrl] = useState(trueUrl);\r\n    const [stateFalseUrl, setStateFalseUrl] = useState(falseUrl);\r\n\r\n    const trueUrlGenerate = () => {\r\n        trueUrl = Math.random();\r\n        trueUrl = String(trueUrl);\r\n        trueUrl = trueUrl.slice(2, 7);\r\n        trueUrl = `?id=${trueUrl}`;\r\n        setStateTrueUrl(trueUrl);\r\n    }\r\n\r\n    const falseUrlGenerate = () => {\r\n        let num = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n        let str = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'y', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't']\r\n        let key = ['id', 'my', 'blabla', 'key', 'iid', 'xxx', '999', '591', 'true', 'script', 'blob']\r\n        str = [...num, ...str];\r\n        key.sort(() => Math.random() - 0.5);\r\n        str.sort(() => Math.random() - 0.5);\r\n        str = str.join('');\r\n        falseUrl = `?${key[0]}=${str.slice(0, 7)}`\r\n        setStateFalseUrl(falseUrl);\r\n    }\r\n\r\n\r\n    const onTrueGenerate = () => {\r\n        trueUrlGenerate();\r\n    }\r\n    const onFalseGenerate = () => {\r\n        falseUrlGenerate();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={ParseUrlCss.wrapper}>\r\n                <ParseUrl parametersTrue={stateTrueUrl} parametersFalse={stateFalseUrl} />\r\n                <div>\r\n                    <button onClick={onTrueGenerate}>Generate true Query String Parameters</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onFalseGenerate}>Generate false Query String Parameters</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MyHooksParseUrlContainer;","import React from 'react';\r\nimport testsCss from './tests.module.css';\r\nimport MyHooksUpdatesStoreContainer from './updatesStore/MyHooksUpdatesStoreContainer';\r\nimport MyHooksParseUrlContainer from './parseUrl/MyHooksParseUrlContainer'\r\n\r\n\r\nconst Tests = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Test page</h1>\r\n            <div className={testsCss.wrapper}>\r\n                <MyHooksUpdatesStoreContainer />\r\n                <div className={testsCss.box}>\r\n                    <MyHooksParseUrlContainer />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tests;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Error = (props) => {\r\n\r\n\r\n    return (\r\n        \r\n            <>\r\n                <h1>Error page</h1>\r\n                <p>My location {props.location.pathname}</p>\r\n                <NavLink to=\"/\">Go index</NavLink>\r\n            </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport Documentation from '../components/pages/documentation/Documentation';\r\nimport NavTopHook from '../components/blocks/nav/NavTopHook';\r\nimport Help from '../components/pages/help/Help';\r\nimport Index from '../components/pages/index/Index';\r\nimport Tests from '../components/pages/tests/Tests';\r\nimport Error from '../Error';\r\n\r\n\r\nconst AllRoute = () => {\r\n\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n\r\n    const parsed = queryString.parse(location.search);\r\n\r\n    let paramTests = 0;\r\n    switch (Object.keys(parsed).length) {\r\n        case 0:\r\n            paramTests = null;\r\n            break;\r\n        case 1:\r\n            paramTests = !isNaN(parsed.id) ? true : false;\r\n            break;\r\n        default:\r\n            paramTests = false;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {location.pathname === '/tests' && paramTests === false ? history.push(\"/tests\") : ''}\r\n            <NavTopHook />\r\n            <Switch>\r\n                <Route exact={true} path=\"/\" component={Index} />\r\n                <Route path=\"/documentation\" component={Documentation} />\r\n                <Route path=\"/help\" component={Help} />\r\n                <Route path=\"/tests/\" component={Tests} />\r\n                <Route path=\"*\" render={() => <Error location={location} />} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AllRoute;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport testsReducerHook from \"./testsReducerHook\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    testsReducerHook: testsReducerHook\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n//window.store = store;\r\nexport default store;","import React from 'react';\nimport AllRoute from './route/AllRoute';\nimport app from './app.css'\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nfunction AppContainer() {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AllRoute className={app} />\n            </Provider>\n        </HashRouter>\n    )\n}\n\nfunction App() {\n    return (\n        <AppContainer />\n    );\n}\n\n//window.store = store;\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}